name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install root dependencies
        run: npm install

      - name: Install backend dependencies
        run: |
          cd src/backend
          npm install

      - name: Lint backend
        run: |
          cd src/backend
          npm run lint

      - name: Format backend (check only)
        run: |
          cd src/backend
          npx prettier --check .

      - name: Type check backend
        run: |
          cd src/backend
          npx tsc --noEmit

      - name: Set up PostgreSQL
        uses: Harmon758/postgresql-action@v1
        with:
          postgresql version: '15'
          postgresql db: ${{ secrets.POSTGRES_DB }}
          postgresql user: ${{ secrets.POSTGRES_USER }}
          postgresql password: ${{ secrets.POSTGRES_PASSWORD }}

      - name: Set up test database schema
        env:
          PGADMIN_USER: postgres
          PGADMIN_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_USER: ${{ secrets.POSTGRES_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_NAME: ${{ secrets.POSTGRES_DB }}
        run: |
          ./eng/mixtape-db-setup.sh

      - name: Run backend tests
        env:
          POSTGRES_CONNECTION_STRING: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
        run: |
          ./run-test-server.sh
          sleep 5
          ./test-server.sh

      - name: Install frontend dependencies
        working-directory: src/web
        run: npm install --legacy-peer-deps

      - name: Install Playwright browsers
        working-directory: src/web
        run: npx playwright install --with-deps

      - name: Start frontend dev server
        working-directory: src/web
        run: |
          nohup npm run dev > /tmp/mixtape-frontend-server.ci.log 2>&1 &
          for i in {1..30}; do
            if curl -sSf http://localhost:3000 >/dev/null; then
              echo "[ci.yml] Frontend is up!"
              break
            fi
            sleep 1
          done
          if ! curl -sSf http://localhost:3000 >/dev/null; then
            echo "[ci.yml] ERROR: Frontend did not start in time. Log output:" >&2
            cat /tmp/mixtape-frontend-server.ci.log >&2
            exit 1
          fi

      - name: Run Playwright web UI tests
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        working-directory: src/web
        run: npx playwright test

      - name: Stop frontend server
        run: |
          FRONTEND_PIDS=$(lsof -ti :3000)
          if [ -n "$FRONTEND_PIDS" ]; then
            echo "[ci.yml] Cleaning up all frontend servers on port 3000: $FRONTEND_PIDS ..."
            kill $FRONTEND_PIDS || true
          fi

      - name: Stop backend server
        run: ./eng/stop-test-server.sh
